server:
  # Graceful shutdown feature
  # By default, the value of this property is equal to immediate, which means the server gets shut down immediately.
  # see: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#graceful-shutdown
  shutdown: graceful

logging:
  level:
    root: WARN
    com.giraone: INFO
    # set the 4 lines to warn to suppress large config list output on startup
    org.apache.kafka.common.config.AbstractConfig: WARN
    org.apache.kafka.clients.admin.AdminClientConfig: WARN
    org.apache.kafka.clients.producer.ProducerConfig: WARN
    org.apache.kafka.clients.consumer.ConsumerConfig: WARN
  pattern:
    dateformat: 'yyyy-MM-dd HH:mm:ss.SSS,Europe/Berlin'

management:
  endpoints:
    web:
      exposure:
        include: [ 'health', 'loggers', 'metrics', 'prometheus' ]

spring:
  application:
    name: reactor-kafka
  kafka:
    bootstrap-servers: 'localhost:9092'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: reactor-kafka
  jmx:
    enabled: true

application:
  topic-a: 'a1'
  topic-b: 'b1'
  producer-variables:
    max-number-of-events: 1000000 # Default 1000000.
  consumer:
    max-poll-records: 500 # Default 500.
    max-poll-interval: '30s' # Default 30s.
    fetch-max-bytes: 52428800 # Default 52428800.
    max-partition-fetch-bytes: 1048576 # Default 1048576.
    fetch-max-wait-ms: '500ms' # Default 500ms.
  loki:
    host: localhost
    port: 3100